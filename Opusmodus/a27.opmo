(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 8/4 pitch))
(setf omn0 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 7/4 pitch))
(setf omn1 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 6/4 pitch))
(setf omn2 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 5/4 pitch))
(setf omn3 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn4 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 7/8 pitch))
(setf omn5 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 6/8 pitch))
(setf omn6 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 5/8 pitch))
(setf omn7 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/8 pitch))
(setf omn8 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 3/8 pitch))
(setf omn9 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn10 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn11 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn12 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn13 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn14 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn15 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn16 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn17 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn18 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn19 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn20 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn21 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn22 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn23 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn24 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn25 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn26 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn27 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn28 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn29 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn30 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn31 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn32 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn33 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn34 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn35 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn36 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn37 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn38 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn39 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn40 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn41 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn42 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn43 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn44 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn45 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn46 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn47 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn48 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn49 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn50 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn51 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn52 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn53 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn54 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn55 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn56 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn57 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn58 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn59 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn60 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn61 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn62 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn63 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn64 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn65 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn66 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn67 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn68 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn69 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn70 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn71 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn72 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn73 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn74 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn75 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn76 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn77 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn78 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn79 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn80 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn81 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn82 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn83 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn84 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn85 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn86 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn87 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn88 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn89 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn90 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn91 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn92 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn93 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn94 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn95 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn96 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn97 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn98 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn99 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn100 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn101 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn102 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn103 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn104 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn105 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn106 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn107 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn108 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn109 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn110 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn111 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn112 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn113 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn114 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn115 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn116 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn117 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn118 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn119 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn120 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn121 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn122 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn123 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn124 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn125 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn126 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn127 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn128 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn129 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn130 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn131 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn132 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn133 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn134 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn135 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn136 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn137 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn138 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn139 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn140 (make-omn :pitch pitch :length length))
(setf pitch (integer-to-pitch (rnd-sample (car (rnd-number 1 1 10)) (rnd-row))))
(setf length (stretch 4/4 pitch))
(setf omn141 (make-omn :pitch pitch :length length))
(setf omn (assemble-seq '(omn0 omn1 omn2 omn3 omn4 omn5 omn6 omn7 omn8 omn9 omn10 omn11 omn12 omn13 omn14 omn15 omn16 omn17 omn18 omn19 omn20 omn21 omn22 omn23 omn24 omn25 omn26 omn27 omn28 omn29 omn30 omn31 omn32 omn33 omn34 omn35 omn36 omn37 omn38 omn39 omn40 omn41 omn42 omn43 omn44 omn45 omn46 omn47 omn48 omn49 omn50 omn51 omn52 omn53 omn54 omn55 omn56 omn57 omn58 omn59 omn60 omn61 omn62 omn63 omn64 omn65 omn66 omn67 omn68 omn69 omn70 omn71 omn72 omn73 omn74 omn75 omn76 omn77 omn78 omn79 omn80 omn81 omn82 omn83 omn84 omn85 omn86 omn87 omn88 omn89 omn90 omn91 omn92 omn93 omn94 omn95 omn96 omn97 omn98 omn99 omn100 omn101 omn102 omn103 omn104 omn105 omn106 omn107 omn108 omn109 omn110 omn111 omn112 omn113 omn114 omn115 omn116 omn117 omn118 omn119 omn120 omn121 omn122 omn123 omn124 omn125 omn126 omn127 omn128 omn129 omn130 omn131 omn132 omn133 omn134 omn135 omn136 omn137 omn138 omn139 omn140 omn141 )))
(def-score a27
         (:key-signature 'atonal
          :time-signature (get-time-signature omn)
          :tempo 120)
(a27 :omn omn)
)