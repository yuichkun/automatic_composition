var motifList = require('./motifList');
var motifManipulation = require('./motifManipulation');
var evalMotif = motifManipulation.evalMotif;

class Motif {

  constructor(omnIndex, timeSig, funcName, args){
    this.omnIndex = omnIndex;
    this.timeSig = timeSig;
    this.funcName = funcName;
    this.args = args;
    this.omn = "";
  }

  generateOMN(){
    if(this.funcName == ''){
      this.genBlank();
    } else {
      var motif = motifList[this.funcName];
      this.handleMotif(motif);
      this.makeOMN();
    }
    return this.omn;
  }

  handleMotif(motif){
    var paramList = ['pitch', 'length', 'velocity', 'articulation'];
    paramList.forEach(
      (param)=>{
        var value = "";
        if(motif.hasOwnProperty(param)){
          value = evalMotif(motif[param], this);
        } else {
          value = "nil";
        }
        this.genParam(param, value);
      }
    );
  }

  genParam(param, value){
    this.omn += `(setf ${param} ${value})\n`;
  }

  genBlank(index){
    this.omn += `(setf omn${this.omnIndex} '(-${this.timeSig}))\n`
  }

  makeOMN(){
    this.omn += `(setf omn${this.omnIndex} (make-omn :pitch pitch :length length :velocity velocity :articulation articulation))\n`;
  }

}

module.exports = Motif;
